plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // sockjs
    implementation 'org.webjars:sockjs-client:1.5.1'
// stomp
    implementation 'org.webjars:stomp-websocket:2.3.4'
// gson
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation 'org.springframework.boot:spring-boot-starter-validation'            //validation
    implementation 'mysql:mysql-connector-java:8.0.28'                                  //mysql
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'   // s3
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'            // redis
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'             // redis 시간저장
    implementation 'com.fasterxml.jackson.core:jackson-databind'                        // redis 시간저장

    implementation 'org.springframework.boot:spring-boot-starter-security'              // Security

    // JWT
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-batch" // Batch 적용
    testImplementation "org.springframework.batch:spring-batch-test" // Batch Test
    runtimeOnly 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslSrcDir = 'src/main/generated'
clean {
    delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

